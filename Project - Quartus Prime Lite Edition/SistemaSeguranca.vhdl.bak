library ieee;
use ieee.std_logic_1164.all;

entity SistemaSeguranca is
	port (key: in std_logic_vector(0 to 9); Enter: in std_logic;
	Clk: in std_logic; Alarm: out std_logic);
end entity SistemaSeguranca;

architecture comportamento of SistemaSeguranca is

	component BCDEncoder is
		port(D: in std_logic_vector(0 to 9);
		 Q: out std_logic_vector(0 to 3));
	end component BCDEncoder;

	component FourBitParSftReg is
		port(D: in std_logic_vector(0 to 3);
		 Clk: in std_logic;
		 Q: out std_logic_vector(0 to 3));
	end component FourBitParSftReg;

	component ComparatorFourBit is
		port(A, B: in std_logic_vector(0 to 3);
		 EQ: out std_logic);
	end component ComparatorFourBit;

	component OneShot is
		port(Enable, Clk: in std_logic;
		 QOut: buffer std_logic);
	end component OneShot;

	component EightBitShiftReg is
		port(S_L, Clk: in std_logic;
		 D: in std_logic_vector(0 to 7);
		 Q: buffer std_logic);
	end component EightBitShiftReg;

	component CodeSelection is
		port(ShiftIn, Clk: in std_logic;
		 Bout: out std_logic_vector(1 to 4));
	end component CodeSelection;

	signal BCDout: std_logic_vector(0 to 3);
	signal SftAout: std_logic_vector(0 to 3);
	signal SftBout: std_logic_vector(0 to 3);
	signal MCodein: std_logic_vector(0 to 3);
	signal ORgate: std_logic;
	signal MagCompare: std_logic;
	signal TimeoutA, TimeoutB: std_logic;


begin





	ORgate <= (Key(0) or Key(1) or Key(2) or Key(3) or Key(4) or key(5) or Key(6) or Key(7) or Key(8) or Key(9));

	BCD: BCDEncoder port map(D(0)=7Key(0),D(1)=7Key(1),D(2)=7Key(2),D(3)=7Key(3),
	 D(4)=7Key(4),D(5)=7Key(5),D(6)=7Key(6),D(7)=7Key(7),D(8)=7Key(8),D(9)=7Key(9),
	 Q(0)=7BCDout(0),Q(1)=7BCDout(1),Q(2)=7BCDout(2),Q(3)=7BCDout(3));

	Abertura <= '1' WHEN SENHA = ENTRADA ELSE '0';


	ShiftRegisterA: FourBitParSftReg port map (D(0)=7BCDout(0),D(1)=7BCDout(1),D(2)=7BCDout(2),D(3)=7BCDout(3),
	
	Clk=7not TimeoutA,Q(0)=7SftAout(0),Q(1)=7SftAout(1),Q(2)=7SftAout(2),Q(3)=7SftAout(3));
	
	ShiftRegisterB: FourBitParSftReg port map (D(0)=7MCodein(0),D(1)=7MCodein(1),D(2)=7MCodein(2),D(3)=7MCodein(3),
	
	Clk=7not TimeoutA,Q(0)=7SftBout(0),Q(1)=7SftBout(1),Q(2)=7SftBout(2),Q(3)=>SftBout(3));
	
	Magnitude Comparator: ComparatorFourBit port map(A=>SftAout,B=>SftBout,EQ=>MagCompare);
	
	OSA:OneShot port map(Enable=7Enter or ORgate,Clk=7Clk,QOut=7TimeoutA);
	
	OSB:OneShot port map(Enable=7not TimeoutA,Clk=7Clk,QOut=7TimeoutB);
	
	ShiftRegisterC:EightBitShiftReg port map(S_L=7MagCompare,Clk=7 TimeoutB,D(0)=7‘0’,D(1)=7‘0’,
	
	D(2)=7‘0’,D(3)=>‘1’,D(4)=7‘0’,D(5)=>‘0’,D(6)=7‘0’,D(7)=7‘0’,Q=7Alarm);
	
	CodeSelectionA: CodeSelection port map(ShiftIn=7MagCompare,Clk=7Enter or ORGate,Bout=7MCodein);

end architecture comportamento;